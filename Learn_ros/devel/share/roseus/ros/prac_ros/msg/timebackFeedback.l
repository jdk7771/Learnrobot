;; Auto-generated. Do not edit!


(when (boundp 'prac_ros::timebackFeedback)
  (if (not (find-package "PRAC_ROS"))
    (make-package "PRAC_ROS"))
  (shadow 'timebackFeedback (find-package "PRAC_ROS")))
(unless (find-package "PRAC_ROS::TIMEBACKFEEDBACK")
  (make-package "PRAC_ROS::TIMEBACKFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude timebackFeedback.msg.html


(defclass prac_ros::timebackFeedback
  :super ros::object
  :slots (_progress ))

(defmethod prac_ros::timebackFeedback
  (:init
   (&key
    ((:progress __progress) 0.0)
    )
   (send-super :init)
   (setq _progress (float __progress))
   self)
  (:progress
   (&optional __progress)
   (if __progress (setq _progress __progress)) _progress)
  (:serialization-length
   ()
   (+
    ;; float32 _progress
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _progress
       (sys::poke _progress (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _progress
     (setq _progress (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get prac_ros::timebackFeedback :md5sum-) "70805092fd20e110765c7b79e8efb737")
(setf (get prac_ros::timebackFeedback :datatype-) "prac_ros/timebackFeedback")
(setf (get prac_ros::timebackFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float32 progress

")



(provide :prac_ros/timebackFeedback "70805092fd20e110765c7b79e8efb737")


